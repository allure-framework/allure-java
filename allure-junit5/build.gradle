description = 'Allure JUnit 5'

apply from: "${gradleScriptDir}/maven-publish.gradle"
apply from: "${gradleScriptDir}/bintray.gradle"
apply plugin: 'maven'

configurations {
    agent
}

dependencies {
    agent('org.aspectj:aspectjweaver')

    compile project(':allure-java-commons')
    compile project(':allure-junit-platform')
    compile('org.junit.jupiter:junit-jupiter-engine')

    testCompile project(':allure-java-commons-test')
    testCompile('org.assertj:assertj-core')
    testCompile('org.junit.jupiter:junit-jupiter-api')
    testCompile('org.junit.jupiter:junit-jupiter-params')
    testCompile('org.slf4j:slf4j-simple')
    testRuntime('org.junit.jupiter:junit-jupiter-engine')
}

jar {
    from('src/main/services') {
        into 'META-INF/services'
    }
}

test {
    systemProperty 'org.slf4j.simpleLogger.defaultLogLevel', 'debug'
    systemProperty 'allure.model.indentOutput', true

    exclude 'io/qameta/allure/junit5/samples/**'

    useJUnitPlatform {
        includeEngines 'junit-jupiter'
    }

    doFirst {
        jvmArgs "-javaagent:${configurations.agent.singleFile}"
    }
}

task spiOffJar(type: Jar, dependsOn: classes) {
    classifier = 'spi-off'
    from sourceSets.main.output
}

configurations {
    spiOff.extendsFrom(compile)
}

artifacts {
    spiOff spiOffJar
    archives spiOffJar
}
